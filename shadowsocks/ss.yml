---
- hosts: shadowsocks
  vars:
    shadowsocks_home: "/etc/shadowsocks"
    shadowsocks_config_server_port: "443"
    shadowsocks_config_local_port: "1080"
    shadowsocks_config_timeout: "600"
    shadowsocks_config_encryption_method: "aes-256-cfb"
    shadowsocks_config_fast_open: yes
    shadowsocks_sysctl_tweak: yes
  vars_prompt:
    - name: shadowsocks_password
      prompt: "please setup shadowsocks password: "
  tasks:
    - name: ensure a list of packages installed
      yum:
        name: "{{ packages }}"
      vars:
        packages:
          - python-setuptools
      when: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "7")
      tags: prepare

    - name: install pip
      easy_install: name=pip
      tags: prepare

    - name: install Shadowsocks
      pip: name=shadowsocks state=latest
      tags: install
    - name: assure shadowsocks home dir exists
      file: path={{ shadowsocks_home }} state=directory
      tags: config

    - name: generate config file
      template: src=shadowsocks.json
                dest={{ shadowsocks_home }}/shadowsocks.json
                mode=640
                owner=root
                group=root
                force=yes
      tags: config

    - name: tweak sysctl
      sysctl: name="{{ item.key }}"
              value="{{ item.value }}"
              state=present
              reload=yes
              ignoreerrors=yes
      with_items:
        - { "key": "fs.file-max", "value": "51200" }
        - { "key": "net.core.rmem_max", "value": "67108864" }
        - { "key": "net.core.wmem_max", "value": "67108864" }
        - { "key": "net.core.rmem_default", "value": "65536" }
        - { "key": "net.core.wmem_default", "value": "65536" }
        - { "key": "net.core.netdev_max_backlog", "value": "4096" }
        - { "key": "net.core.somaxconn", "value": "4096" }
        - { "key": "net.ipv4.tcp_syncookies", "value": "1" }
        - { "key": "net.ipv4.tcp_tw_reuse", "value": "1" }
        - { "key": "net.ipv4.tcp_tw_recycle", "value": "0" }
        - { "key": "net.ipv4.tcp_fin_timeout", "value": "30" }
        - { "key": "net.ipv4.tcp_keepalive_time", "value": "1200" }
        - { "key": "net.ipv4.ip_local_port_range", "value": "10000 65000" }
        - { "key": "net.ipv4.tcp_max_syn_backlog", "value": "4096" }
        - { "key": "net.ipv4.tcp_max_tw_buckets", "value": "5000" }
        - { "key": "net.ipv4.tcp_rmem", "value": "4096 87380 67108864" }
        - { "key": "net.ipv4.tcp_wmem", "value": "4096 65536 67108864" }
        - { "key": "net.ipv4.tcp_mtu_probing", "value": "1" }

      when: shadowsocks_sysctl_tweak
      tags: sysctl

    - name: enable tcp_fastopen if available
      sysctl: name="net.ipv4.tcp_fastopen"
              value="3"
              state=present
              reload=yes
      when: shadowsocks_sysctl_tweak and ansible_kernel | version_compare('3.7', '>=')
      tags: sysctl

    - name: "upload systemd service"
      copy:
        src: "shadowsocks.service"
        dest: "/usr/lib/systemd/system/"
      tags: systemd

    - name: restart shadowsocks
      systemd:
        state: restarted
        daemon_reload: yes
        name: shadowsocks
      tags: systemd

    - firewalld:
        zone: public
        port: "{{ shadowsocks_config_server_port }}/tcp"
        permanent: true
        state: enabled
      notify:
        - firewall reload
      tags: launch

  handlers:
    - name: firewall reload
      shell: "firewall-cmd --reload"
